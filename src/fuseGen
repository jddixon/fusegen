#!/usr/bin/python3
#
# ~/dev/py/fusegen/fuseGen

import os
import sys
import time
from argparse import ArgumentParser
from fusegen import *


def main():
    # program defaults ----------------------------------------------
    myDate = "%04d-%02d-%02d" % time.gmtime()[:3]

    # parse the command line ----------------------------------------

    DESC = 'generate a minimal FUSE (file system in user space) package'
    parser = ArgumentParser(description=DESC)

    parser.add_argument('-A', '--acPrereq', default='2.69',
                        help='prerequisite autoconfig version number')

    parser.add_argument('-D', '--myDate', default=myDate,
                        help='date in YYYY-MM-DD format')

    parser.add_argument('-d', '--devDir', default='/home/jdd/dev/c',
                        help='development directory, where C projects live')

    parser.add_argument('-E', '--emailAddr', default='jddixon at gmail dot com',
                        help='contact email address')

    parser.add_argument('-f', '--force', action='store_true',
                        help='if utility already exists, overwrite it')

    parser.add_argument('-I', '--instrumenting', action='store_true',
                        help='generate instrumentation code')

    parser.add_argument('-j', '--justShow', action='store_true',
                        help='show options and exit')

    parser.add_argument('-L', '--logging', action='store_true',
                        help='generate logging code')

    parser.add_argument('-P', '--pkgName',
                        help='utility package name')

    parser.add_argument('-T', '--testing', action='store_true',
                        help='this is a test run')

    parser.add_argument('-v', '--verbose', action='store_true',
                        help='be chatty')

    parser.add_argument('-V', '--myVersion', default='0.0.0',
                        help="version in X.Y.Z format")

    args = parser.parse_args()

    # sanity checks -------------------------------------------------
    checkDate(args.myDate)
    checkPkgName(args.pkgName)
    checkVersion(args.myVersion)

    # fixups --------------------------------------------------------
    args.lcName = args.pkgName.lower()
    args.ucName = args.pkgName.upper()

    if args.testing:
        args.pathToPkg = os.path.join('tmp', args.pkgName)
    else:
        args.pathToPkg = os.path.join(args.devDir, args.pkgName)

    # complete setup ------------------------------------------------
    appName = 'fuseGen %s' % __version__

    # maybe show options and such -----------------------------------
    if args.verbose or args.justShow:
        print("%s %s" % (appName, __version_date__))

    if args.verbose or args.justShow:
        print('acPrereq             = ' + str(args.acPrereq))
        print('devDir               = ' + str(args.devDir))
        print('emailAddr            = ' + str(args.emailAddr))
        print('instrumenting        = ' + str(args.instrumenting))
        print('force                = ' + str(args.force))
        print('logging              = ' + str(args.logging))
        print('myDate               = ' + str(args.myDate))
        print('myVersion            = ' + str(args.myVersion))
        print('pathToPkg            = ' + str(args.pathToPkg))
        print('pkgName              = ' + str(args.pkgName))
        print('  lcName             = ' + str(args.lcName))
        print('  ucName             = ' + str(args.ucName))
        print('testing              = ' + str(args.testing))
        print('verbose              = ' + str(args.verbose))

    if args.justShow:
        sys.exit(0)

    # do what's required --------------------------------------------
    makeFusePkg(args)


if __name__ == '__main__':
    main()
