#!/usr/bin/python3
#
# ~/dev/py/fusegen/src/fuseGen

import os
import sys
import time
from argparse import ArgumentParser
from fusegen import(__version__, __version_date__,
                    make_fuse_pkg, check_date, check_pkg_name, check_version)


def main():
    # program defaults ----------------------------------------------
    my_date = "%04d-%02d-%02d" % time.gmtime()[:3]

    # parse the command line ----------------------------------------

    desc = 'generate a minimal FUSE (file system in user space) package'
    parser = ArgumentParser(description=desc)

    parser.add_argument('-A', '--ac_prereq', default='2.69',
                        help='prerequisite autoconfig version number')

    parser.add_argument('-D', '--my_date', default=my_date,
                        help='date in YYYY-MM-DD format')

    parser.add_argument('-d', '--dev_dir', default='/home/jdd/dev/c',
                        help='development directory, where C projects live')

    parser.add_argument('-E', '--email_addr', default='jddixon at gmail dot com',
                        help='contact email address')

    parser.add_argument('-f', '--force', action='store_true',
                        help='if utility already exists, overwrite it')

    parser.add_argument('-I', '--instrumenting', action='store_true',
                        help='generate instrumentation code')

    parser.add_argument('-j', '--justShow', action='store_true',
                        help='show options and exit')

    parser.add_argument('-L', '--logging', action='store_true',
                        help='generate logging code')

    parser.add_argument('-P', '--pkg_name',
                        help='utility package name')

    parser.add_argument('-T', '--testing', action='store_true',
                        help='this is a test run')

    parser.add_argument('-v', '--verbose', action='store_true',
                        help='be chatty')

    parser.add_argument('-V', '--my_version', default='0.0.0',
                        help="version in X.Y.Z format")

    args = parser.parse_args()

    # sanity checks -------------------------------------------------
    check_date(args.my_date)
    check_pkg_name(args.pkg_name)
    check_version(args.my_version)

    # fixups --------------------------------------------------------
    args.lc_name = args.pkg_name.lower()
    args.uc_name = args.pkg_name.upper()

    if args.testing:
        args.path_to_pkg = os.path.join('tmp', args.pkg_name)
    else:
        args.path_to_pkg = os.path.join(args.dev_dir, args.pkg_name)

    # complete setup ------------------------------------------------
    app_name = 'fuseGen %s' % __version__

    # maybe show options and such -----------------------------------
    if args.verbose or args.justShow:
        print("%s %s" % (app_name, __version_date__))

    if args.verbose or args.justShow:
        print('ac_prereq            = ' + str(args.ac_prereq))
        print('dev_dir              = ' + str(args.dev_dir))
        print('email_addr           = ' + str(args.email_addr))
        print('instrumenting        = ' + str(args.instrumenting))
        print('force                = ' + str(args.force))
        print('logging              = ' + str(args.logging))
        print('my_date              = ' + str(args.my_date))
        print('my_version           = ' + str(args.my_version))
        print('path_to_pkg          = ' + str(args.path_to_pkg))
        print('pkg_name             = ' + str(args.pkg_name))
        print('  lc_name            = ' + str(args.lc_name))
        print('  uc_name            = ' + str(args.uc_name))
        print('testing              = ' + str(args.testing))
        print('verbose              = ' + str(args.verbose))

    if args.justShow:
        sys.exit(0)

    # do what's required --------------------------------------------
    make_fuse_pkg(args)


if __name__ == '__main__':
    main()
