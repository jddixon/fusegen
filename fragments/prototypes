void destroy(void *userdata)
void *init(struct fuse_conn_info *conn)
void usage()
int  access(const char *path, int mask)
int  chmod(const char *path, mode_t mode)
int  chown(const char *path, uid_t uid, gid_t gid)
int  create(const char *path, mode_t mode, struct fuse_file_info *fi)
int  fgetattr(const char *path, struct stat *statbuf, struct fuse_file_info *fi)
int  flush(const char *path, struct fuse_file_info *fi)
int  fsyncdir(const char *path, int datasync, struct fuse_file_info *fi)
int  fsync(const char *path, int datasync, struct fuse_file_info *fi)
int  ftruncate(const char *path, off_t offset, struct fuse_file_info *fi)
int  getattr(const char *path, struct stat *statbuf)
int  getxattr(const char *path, const char *name, char *value, size_t size)
int  link(const char *path, const char *newpath)
int  listxattr(const char *path, char *list, size_t size)
int  main(int argc, char *argv[])
int  mkdir(const char *path, mode_t mode)
int  mknod(const char *path, mode_t mode, dev_t dev)
int  opendir(const char *path, struct fuse_file_info *fi)
int  open(const char *path, struct fuse_file_info *fi)
int  readdir(const char *path, void *buf, fuse_fill_dir_t filler, off_t offset, struct fuse_file_info *fi)
int  read(const char *path, char *buf, size_t size, off_t offset, struct fuse_file_info *fi)
int  readlink(const char *path, char *link, size_t size)
int  releasedir(const char *path, struct fuse_file_info *fi)
int  release(const char *path, struct fuse_file_info *fi)
int  removexattr(const char *path, const char *name)
int  rename(const char *path, const char *newpath)
int  rmdir(const char *path)
int  setxattr(const char *path, const char *name, const char *value, size_t size, int flags)
int  statfs(const char *path, struct statvfs *statv)
int  symlink(const char *path, const char *link)
int  truncate(const char *path, off_t newsize)
int  unlink(const char *path)
int  utime(const char *path, struct utimbuf *ubuf)
int  write(const char *path, const char *buf, size_t size, off_t offset, struct fuse_file_info *fi)
