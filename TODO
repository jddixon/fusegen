~/dev/py/fusegen/TODO

2015-03-04
    * document setting up core dumping to /tmp/cores using rc.local
        and subsequent use of debugger
    * FIX: running blk-31-4k gets a "fio: posix_fallocate fails: 
        Software caused connection abort" and then "Transport endpoint
        is not connected" because of this.
        - urgently need to implement fallocate (introduced by v2.9.1)
        - make sure that fuse.h corresponds to v2.9.1 include/fuse.h
    * fuseGen should
        - create tmp/
        - write an appropriate bin/blk-31-4k

2015-03-03
    * destroy should write buckets[0] to disk using a unique file name  * DONE
        - say "bucket-CCYYMMDD-HHMMSS" = 23 char with terminating null  * DONE
            * but FIXME: this is not working
        - latency needs to exclude the time needed to write this file
        - that unique file name/path should be a command line option
            with a sensible default
        - create instrumented version of stdfs
            * so if fusegen -I we get stdifs
            * without -I we get stdfs
        - step the minor version number when this works
        - add build file at the top level (chmod) = autogen,            * DONE
            config, make                                                * DONE

2015-03-02
    * introduce a table of upper-cases opcode names for use on 
        the C side (eg FG_GETATTR instead of 12), to make the
        generated code more readable
    * FIXME: xxxfs/bin/blk-31-4k gets the 'transport endpoint not       * FIXED
        connected' message                                              * FIXED
    * more important: stdfs does not get mounted when bin/mountStdFS    * FIXED
        is invoked                                                      * FIXED

2015-02-22 (-18, rewritten)
    * need a README.install which explains that this package should 
        never be installed by root
    * rework comments and replace install.sh accordingly
        - rm src/install.sh                                             * DONE
        - see man install
        - model may be ~/extern/xen-api/scripts/install.sh

2015-02-17
    * URGENT: xxxfs executable must depend upon all *.inc
    * need better checks on rootdir, mountPoint in main.inc ChkDir()
2015-02-16
    * need a README.filesystem.generation which describes how to run
        fuseGen and thereby create the FUSE file system
        - main point: run ./autogen.sh
    * generated main.inc 
        - must remove any fg* options from the argv passed to fuse 
            (remembering to update argc)

    // FUSE VERSION 2.6 ADDITIONS
    * add utimens() - and deprecate utime()
    * add lock() 
    * add bmap()
    // FUSE VERSION 2.8 ADDITIONS
    * add ioctl()
    * add poll()
    // FUSE VERSION 2.9 ADDITIONS
    * add write_buf()
    * add read_buf()
    * add flock()

2015-02-15
    * need a test program that exercises each and every FUSE opcode
    * need a fuseGen -L option which enables the generation of logging
        code
        - the package will then need a correlative 
            --fgLogging <LOG_FILE_NAME>
            option to turn it on; with a dash meaning STDOUT
    * need a fuseGen -C option which enables the collection of stats
        over a TCP/IP connection
        - the package will then need a correlative 
            --fgPort <PORT_NUMBER>
            with a reasonable default

2015-02-13
    * choose a better name than 'workdir'

2015-02-12
    * need to add workdir to Makefile.am 

2015-02-11
    * all blocks of C code in fuseGen should be reworked to use 
        python triple-quoted templates and expressions like {0:s},
        remembering that any braces must be doubled
        - fsync, mknod                                                  * DONE

2015-01-25 (edited from -24)
    * in testFuseFunc verify that the list of FuseFunc returned  
        from calls to FuseFunc.parseProto can be used to reconstruct
        the text in the file FIRST_LINES
